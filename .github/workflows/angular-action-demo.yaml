name: Angular actions demo

on:
  push:
    tags:
      - PROD_*

permissions:
  contents: write

jobs:
  app_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: List file
        run: ls -lrta

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 6.10.0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: pnpm install
        run: pnpm install

      - name: pnpm run build
        run: pnpm run build

      # - name: Copy hashing tools scripts to dist
      #   run: |
      #     cp -a calculate_hashing_tools ./dist/

      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          name: angular-action-demo_build
          path: ./dist/

      - uses: actions/upload-artifact@v4
        name: Upload calculate hashing tools
        with:
          name: calculate_hashing_tools
          path: calculate_hashing_tools

      - uses: actions/upload-artifact@v4
        name: Upload compare diff tools
        with:
          name: compare_diff_tools
          path: compare_diff_tools

  generate_timestamp:
    runs-on: ubuntu-latest

    outputs:
      timestamp: ${{ steps.ts.outputs.value }}

    steps:
      - name: Generate timestamp
        id: ts
        run: echo "value=$(TZ=Asia/Taipei date +%Y%m%d_%H%M%S)" >> "$GITHUB_OUTPUT"

  app_calculate_hashing:
    needs: ["app_build", "generate_timestamp"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        name: Download angular-action-artifact
        with:
          name: angular-action-demo_build

      - uses: actions/download-artifact@v4
        name: Download angular-action-artifact
        with:
          name: calculate_hashing_tools

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 6.10.0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Test1
        run: |
          ls -ltra

      - name: setup hashing tools
        run: |
          pnpm install
          pnpm -s run start angular-action-demo/ > ${{ needs.generate_timestamp.outputs.timestamp }}.json

      - name: Test2
        run: |
          ls -ltra
          echo $(pwd)
          cat ${{ needs.generate_timestamp.outputs.timestamp }}.json

      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          name: angular-action-demo_calculated
          path: |
            ./angular-action-demo
            ./${{ needs.generate_timestamp.outputs.timestamp }}.json

  app_release:
    needs: ["app_build", "app_calculate_hashing", "generate_timestamp"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        name: Download angular-action-artifact
        with:
          name: angular-action-demo_calculated

      - name: Create GitHub app_Release
        id: create_release
        uses: comnoco/create-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "自動化釋出：包含 Angular build 與 hash 檔"
          draft: false
          prerelease: false

      - name: Zip demo folder
        run: |
          zip -r angular-action-demo-${{needs.generate_timestamp.outputs.timestamp}}.zip angular-action-demo

      - name: Upload demo ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: angular-action-demo-${{ needs.generate_timestamp.outputs.timestamp }}.zip
          asset_name: angular-action-demo-${{ needs.generate_timestamp.outputs.timestamp }}.zip
          asset_content_type: application/zip

      - name: Upload JSON to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ needs.generate_timestamp.outputs.timestamp }}.json
          asset_name: ${{ needs.generate_timestamp.outputs.timestamp }}.json
          asset_content_type: application/json

  job_Download_Artifact:
    runs-on: ubuntu-latest
    needs: ["app_release"]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          tags=($(gh release list --limit 2 --json tagName --jq '[.[].tagName]' | jq -r '.[] | select(startswith("PROD_"))'))
          echo "LATEST_TAG=${tags[0]}" >> $GITHUB_ENV
          echo "PREVIOUS_TAG=${tags[1]}" >> $GITHUB_ENV
          echo "LATEST_TAG=${tags[0]}"
          echo "PREVIOUS_TAG=${tags[1]}"

      - name: Download latest hash.json
        run: |
          url=$(gh release view "$LATEST_TAG" --json assets --jq '.assets[] | select(.name | endswith(".json")) | .url')
          curl -L -H "Authorization: token ${{ env.GH_TOKEN }}" \
              -H "Accept: application/octet-stream" \
              "$url" -o latest.json

      - name: Download previous hash.json
        run: |
          url=$(gh release view "$PREVIOUS_TAG" --json assets --jq '.assets[] | select(.name | endswith(".json")) | .url')
          curl -L -H "Authorization: token ${{ env.GH_TOKEN }}" \
              -H "Accept: application/octet-stream" \
              "$url" -o previous.json

      - name: Download latest ZIP
        run: |
          url=$(gh release view "$LATEST_TAG" --json assets --jq '.assets[] | select(.name | endswith(".zip")) | .url')
          curl -L -H "Authorization: token ${{ env.GH_TOKEN }}" \
              -H "Accept: application/octet-stream" "$url" -o angular-action-demo.zip

          unzip angular-action-demo.zip

      - name: Test
        run: |
          ls -lart
          cat latest.json
          cat previous.json
          ls angular-action-demo

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 6.10.0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Compare diff
        run: |
          cd compare_diff_tools
          pnpm -s run start latest.json previous.json angular-action-demo ../dist_to_deliver

      # - uses: actions/upload-artifact@v4
      #   name: Upload artifact
      #   with:
      #     name: angular-action-demo_calculated
      #     path: |
      #       ./dist_to_deliver

      # - name: Create GitHub app_Release
      #   id: create_release
      #   uses: comnoco/create-release-action@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: "自動化釋出：包含 Angular build 與 hash 檔 差異檔"
      #     draft: false
      #     prerelease: false

      - name: Zip demo folder
        run: |
          zip -r dist_to_deliver.zip dist_to_deliver

      - name: Upload demo ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist_to_deliver.zip
          asset_name: dist_to_deliver.zip
          asset_content_type: application/zip

