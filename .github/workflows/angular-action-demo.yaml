name: Angular actions demo

on:
  push:
    tags:
      - PROD_*

permissions:
  contents: write

jobs:
  app_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: List file
        run: ls -lrta

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 6.10.0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: pnpm install
        run: pnpm install

      - name: pnpm run build
        run: pnpm run build

      - name: Copy hashing tools scripts to dist
        run: |
          cp -a calculate_hashing_tools ./dist/

      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          name: angular-action-demo_build
          path: ./dist/

  generate_timestamp:
    runs-on: ubuntu-latest

    outputs:
      timestamp: ${{ steps.ts.outputs.value }}

    steps:
      - name: Generate timestamp
        id: ts
        run: echo "value=$(TZ=Asia/Taipei date +%Y%m%d_%H%M%S)" >> "$GITHUB_OUTPUT"

  app_calculate_hashing:
    needs: ["app_build", "generate_timestamp"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        name: Download angular-action-artifact
        with:
          name: angular-action-demo_build

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 6.10.0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: setup hashing tools
        run: |
          cd calculate_hashing_tools
          pnpm install
          pnpm -s run start ../angular-action-demo/ > ../${{ needs.generate_timestamp.outputs.timestamp }}.json

      - name: Test
        run: |
          ls -ltra
          echo $(pwd)
          cat ${{ needs.generate_timestamp.outputs.timestamp }}.json

      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          name: angular-action-demo_calculated
          path: |
            ./angular-action-demo
            ./${{ needs.generate_timestamp.outputs.timestamp }}.json

  app_release:
    needs: ["app_build", "app_calculate_hashing", "generate_timestamp"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        name: Download angular-action-artifact
        with:
          name: angular-action-demo_calculated

      - name: Create GitHub app_Release
        id: create_release
        uses: comnoco/create-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "自動化釋出：包含 Angular build 與 hash 檔"
          draft: false
          prerelease: false

      - name: Zip demo folder
        run: |
          zip -r angular-action-demo-${{needs.generate_timestamp.outputs.timestamp}}.zip angular-action-demo

      - name: Upload demo ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: angular-action-demo-${{ needs.generate_timestamp.outputs.timestamp }}.zip
          asset_name: angular-action-demo-${{ needs.generate_timestamp.outputs.timestamp }}.zip
          asset_content_type: application/zip

      - name: Upload JSON to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:        ${{ steps.create_release.outputs.upload_url }}
          asset_path:        ${{ needs.generate_timestamp.outputs.timestamp }}.json
          asset_name:        ${{ needs.generate_timestamp.outputs.timestamp }}.json
          asset_content_type: application/json

  use_github_cli:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - run: gh --help
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
